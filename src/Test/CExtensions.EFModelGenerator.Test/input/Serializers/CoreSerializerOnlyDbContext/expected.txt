// This code was generated with CExtensions.EFModelGenerator, Version=1.0.0.0, Culture=neutral, PublicKeyToken=c770eb04a54cf477 on 27/05/2016 10:46:56
// please visit : https://github.com/CedricDumont/CExtensions-EFModelGenerator
// Copyright Â© Cedric Dumont 2016 (http://www.cedric-dumont.com)

using System.Data.Entity;
using System.Data.Common;

namespace Serializers.CoreSerializerOnlyDbContext
{

   public partial class SampleDbContext: DbContext {

      public IDbSet<Person> People { get; set; } // Person 

      public IDbSet<Orders> Orders { get; set; } // Orders 

      public IDbSet<OrderLines> OrderLines { get; set; } // OrderLines 

      // Constructors
      static SampleDbContext()
      {
            Database.SetInitializer<SampleDbContext>(null);
      }
      public SampleDbContext() : base("Name=SampleDbContext")
      {
            InitializePartial();
      }
      
      public SampleDbContext(string connectionString) : base(connectionString)
      {
            InitializePartial();
      }
      
      public SampleDbContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model) : base(connectionString, model)
      {
            InitializePartial();
      }
      
      public SampleDbContext(DbConnection existingConn) : base(existingConn, true)
      {
            InitializePartial();
      }
      
      protected override void Dispose(bool disposing)
      {
            base.Dispose(disposing);
      }

      partial void InitializePartial();

   }
}
